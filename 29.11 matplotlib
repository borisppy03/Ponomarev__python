import random
import math
import numpy
import numpy as np
import matplotlib.pyplot as plt

#Задание 1
N = [100, 1000, 10000, 100000]
mu, sigma = 0, 1
#1

sp = plt.subplot(221)
x = mu + sigma * np.random.randn(N[0])
n, bins, patches = plt.hist(x, facecolor='g')
plt.grid(True)

#2
sp = plt.subplot(222)
x = mu + sigma * np.random.randn(N[1])
n, bins, patches = plt.hist(x, facecolor='r')
plt.grid(True)

#3
sp = plt.subplot(223)
x = mu + sigma * np.random.randn(N[2])
n, bins, patches = plt.hist(x, facecolor='b')
plt.grid(True)

#4
sp = plt.subplot(224)
x = mu + sigma * np.random.randn(N[3])
n, bins, patches = plt.hist(x)
plt.grid(True)
plt.show()

#Монте-Карло только интеграл
N=100000
sum=0
for i in range(N):
    x1=(random.random()-0.5)*4
    f=-x1*x1+4
    sum=sum+f
print(4*sum/N)

#Задание 2
x = np.arange(-20, 20, )
plt.plot(x, x*x - x - 6)
plt.grid(True, linewidth = 1)
plt.minorticks_on()
plt.grid(which='minor', color='k' ,linestyle=':')
plt.show()



#Задание 3
x = np.arange(-20, 20, )
y = []
for i in x:
    a = np.log((i**2 + 1)*math.exp(-abs(i)/10))/np.log(1 + math.tan(1/(1 + (math.sin(i))**2)))
    y.append(a)
plt.plot(x, y)
plt.grid(True, linewidth=1)
plt.minorticks_on()
plt.grid(which='minor', color='k', linestyle=':')
plt.show()


#Задание 4
x = np.arange(-20, 20, )
y=input()
plt.plot(x, eval(y))
plt.grid(True, linewidth = 1)
plt.minorticks_on()
plt.grid(which='minor', color='k' ,linestyle=':')
plt.show()
